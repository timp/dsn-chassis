<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.cggh.chassis</groupId>
  <artifactId>manta</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Chassis Manta Webapp</name>
  <url>http://cloud1.cggh.org/manta</url>
  <!--
Do the following to get our own jars installed: 
  
mvn install:install-file -DgroupId=org.exist -DartifactId=exist -Dversion=1.4.0 -Dclassifier=orbeon_20100330 -Dpackaging=jar -Dfile=war/WEB-INF/lib/exist-1_4_0_orbeon_20100330.jar
mvn install:install-file -DgroupId=org.exist -DartifactId=exist-xmldb -Dversion=unknown -Dpackaging=jar -Dfile=war/WEB-INF/lib/exist-xmldb.jar
mvn install:install-file -DgroupId=org.apache.abdera -DartifactId=abdera-server -Dversion=0.4.0 -Dclassifier=incubating-SNAPSHOT -Dpackaging=jar -Dfile=war/WEB-INF/lib/abdera.client.0.4.0-incubating-SNAPSHOT.jar
mvn install:install-file -DgroupId=org.exist -DartifactId=exist-optional -Dversion=1.4.0 -Dclassifier=orbeon_20100330 -Dpackaging=jar -Dfile=war/WEB-INF/lib/exist-optional-1_4_0_orbeon_20100330.jar
mvn install:install-file -DgroupId=org.apache.abdera -DartifactId=abdera-core -Dversion=0.4.0 -Dclassifier=incubating-SNAPSHOT -Dpackaging=jar -Dfile=war/WEB-INF/lib/abdera.core.0.4.0-incubating-SNAPSHOT.jar
mvn install:install-file -DgroupId=org.apache.abdera -DartifactId=abdera-i18n -Dversion=0.4.0 -Dclassifier=incubating-SNAPSHOT -Dpackaging=jar -Dfile=war/WEB-INF/lib/abdera-i18n-0.4.0-incubating-SNAPSHOT.jar

  -->
  <dependencies>
    <dependency>
      <groupId>org.exist</groupId>
      <artifactId>exist</artifactId>
      <version>1.4.0</version>
	  <classifier>orbeon_20100330</classifier>
    </dependency>
    <dependency>
      <groupId>org.exist</groupId>
      <artifactId>exist-xmldb</artifactId>
      <version>unknown</version>
    </dependency>
    <dependency>
      <groupId>org.exist</groupId>
      <artifactId>exist-optional</artifactId>
      <version>1.4.0</version>
	  <classifier>orbeon_20100330</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.abdera</groupId>
      <artifactId>abdera-core</artifactId>
      <version>0.4.0</version>
      <classifier>incubating-SNAPSHOT</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.abdera</groupId>
      <artifactId>abdera-i18n</artifactId>
      <version>0.4.0</version>
      <classifier>incubating-SNAPSHOT</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.abdera</groupId>
      <artifactId>abdera-server</artifactId>
      <version>0.4.0</version>
      <classifier>incubating-SNAPSHOT</classifier>
    </dependency>
    <dependency>
     <groupId>org.springframework</groupId>
     <artifactId>spring</artifactId>
     <version>2.5.6.SEC01</version>
     <scope>runtime</scope>
    </dependency> 
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>2.0.5.RELEASE</version>
    </dependency> 
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.12</version>
      <scope>compile</scope>
    </dependency>    
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>manta</finalName>
   <testSourceDirectory>src/test/null</testSourceDirectory>
		<plugins>
    <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-compiler-plugin</artifactId>
     <configuration>
      <source>1.6</source>
      <target>1.6</target>
      <!--
		<excludes>
			<exclude>**/XMLDBStore*</exclude>
			<exclude>**/GetData*</exclude>
			<exclude>**/StoreUploadsServlet*</exclude>
			<exclude>**/SpringSecuritySetUserRequestAttributesFilter*</exclude>
		</excludes>
	  -->
     </configuration>
    </plugin>
		  <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
					<warSourceDirectory>war</warSourceDirectory>
        </configuration>
      </plugin>
    </plugins>

		
  </build>
	
  <profiles>
    <profile>
      <!--
Modify catalina.sh if running tomcat as local user :

   export CATALINA_PID=/var/run/tomcat6.pid

   shift
  
  "$_RUNJAVA" $JAVA_OPTS \
  -Djava.endorsed.dirs="$JAVA_ENDORSED_DIRS" -classpath "$CLASSPATH" \
  -Dcatalina.base="$CATALINA_BASE" \
  -Dcatalina.home="$CATALINA_HOME" \
  -Djava.io.tmpdir="$CATALINA_TMPDIR" \
  org.apache.catalina.startup.Bootstrap "$@" stop

  if [ ! -z "$CATALINA_PID" ]; then
   echo "Killing: `cat $CATALINA_PID`"
   kill -9 `cat $CATALINA_PID`
   echo rm $CATALINA_PID
   rm $CATALINA_PID
  else
   echo "Kill failed: \$CATALINA_PID not set"
  fi

      -->

      <id>tomcatRunning</id>
      <activation>
        <file>
          <exists>/var/run/tomcat6.pid</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <configuration>
              <wait>true</wait>
              <container>
                <containerId>tomcat6x</containerId>
                <type>remote</type>
              </container>
              <configuration>
                <type>runtime</type>
                <properties>
                  <cargo.tomcat.manager.url>http://localhost:8080/manager</cargo.tomcat.manager.url>
                  <cargo.remote.username>admin</cargo.remote.username>
                  <cargo.remote.password />
                </properties>
              </configuration>
              <deployer>
                <type>remote</type>
                <deployables>
                  <deployable>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
              <properties>
              <context>${project.artifactId}</context>
              </properties>
                    <type>war</type>
                  </deployable>
                </deployables>
              </deployer>
            </configuration>
            <executions>
              <execution>
                <id>do</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deployer-redeploy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
	
</project>
