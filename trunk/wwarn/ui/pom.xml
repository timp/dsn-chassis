<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.cggh.chassis</groupId>
    <artifactId>chassis-parent</artifactId>
    <version>1.0-alpha-5-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>chassis-wwarn-ui</artifactId>
  <packaging>war</packaging>
  <name>WWARN UI</name>

  <dependencies>
    <dependency>
      <groupId>org.cggh.chassis</groupId>
      <artifactId>chassis-generic-lib-gwt</artifactId>
      <version>${project.version}</version>
    </dependency>


    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwtVersion}</version>
      <!--
        This is a bit of a hack: we need this to perform a gwt-compile but
        we do not want to include in war
      -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.abdera</groupId>
      <artifactId>abdera-client</artifactId>
      <version>0.4.0-incubating</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <version>2.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwtPluginVersion}</version>
        <executions>
          <execution>
            <id>clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <gwtVersion>${gwtVersion}</gwtVersion>
          <generateDirectory />
          <warSourceDirectory>${basedir}/war</warSourceDirectory>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/war/org.cggh.chassis.wwarn.ui.submitter.Submitter</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/war/org.cggh.chassis.wwarn.ui.administrator.Administrator</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warSourceDirectory>${basedir}/war</warSourceDirectory>
          <!--
            gwt puts dependencies in /war/WEB-INF/lib (even though some of
            them are marked provided in maven
          -->
          <warSourceExcludes>.gwt-tmp/**,WEB-INF/lib/gwt-user*</warSourceExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <resources>
            <resource>
              <directory>src/main/java</directory>
              <includes>
                <include>**/*.java</include>
                <include>**/*.xml</include>
              </includes>
            </resource>
          </resources>
        </configuration>
        <executions>
          <execution>
	    <id>default</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
          <execution>
	    <id>test</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <packaging>jar</packaging>
              <artifactId>${project.artifactId}</artifactId>
              <groupId>${project.groupId}</groupId>
              <version>${project.version}</version>
              <file>
                ${project.build.directory}/${project.artifactId}-${project.version}.jar
              </file>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-source-plugin</artifactId>
      <executions>
        <execution>
          <goals>
            <goal>jar</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
    <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-surefire-plugin</artifactId>
     <configuration>
      <redirectTestOutputToFile>true</redirectTestOutputToFile>
      <forkMode>once</forkMode>
      <!-- threadCount>1</threadCount-->
      <!-- childDelegation>false</childDelegation -->
      <useFile>true</useFile>
      <includes>
       <include>**/*TestCase.java</include>
       <include>**/*Test.java</include>
      </includes>
      <excludes>
      </excludes>
     </configuration>
    </plugin>
      
    </plugins>
  </build>

  <profiles>
    <profile>
      <!--
Modify catalina.sh if running tomcat as local user :

   export CATALINA_PID=/var/run/tomcat6.pid

   shift
  
  "$_RUNJAVA" $JAVA_OPTS \
  -Djava.endorsed.dirs="$JAVA_ENDORSED_DIRS" -classpath "$CLASSPATH" \
  -Dcatalina.base="$CATALINA_BASE" \
  -Dcatalina.home="$CATALINA_HOME" \
  -Djava.io.tmpdir="$CATALINA_TMPDIR" \
  org.apache.catalina.startup.Bootstrap "$@" stop

  if [ ! -z "$CATALINA_PID" ]; then
   echo "Killing: `cat $CATALINA_PID`"
   kill -9 `cat $CATALINA_PID`
   echo rm $CATALINA_PID
   rm $CATALINA_PID
  else
   echo "Kill failed: \$CATALINA_PID not set"
  fi

      -->

      <id>tomcatRunning</id>
      <activation>
        <file>
          <exists>/var/run/tomcat6.pid</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <configuration>
              <wait>true</wait>
              <container>
                <containerId>tomcat6x</containerId>
                <type>remote</type>
              </container>
              <configuration>
                <type>runtime</type>
                <properties>
                  <cargo.tomcat.manager.url>http://localhost:8080/manager</cargo.tomcat.manager.url>
                  <cargo.remote.username>admin</cargo.remote.username>
                  <cargo.remote.password />
                </properties>
              </configuration>
              <deployer>
                <type>remote</type>
                <deployables>
                  <deployable>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
              <properties>
              <context>${project.artifactId}</context>
              </properties>
                    <type>war</type>
                  </deployable>
                </deployables>
              </deployer>
            </configuration>
            <executions>
              <execution>
                <id>do</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deployer-redeploy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
