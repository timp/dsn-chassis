<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.cggh.chassis</groupId>
  <artifactId>chassis-rest</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>chassis-rest</name>

  <dependencies>
    <dependency>
      <groupId>org.cggh.chassis</groupId>
      <artifactId>chassis-model</artifactId>
      <version>0.0.5</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>2.1.13</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.bundles</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2_1</version>
    </dependency>
    <dependency>
      <groupId>org.jvnet.hyperjaxb3</groupId>
      <artifactId>hyperjaxb3-ejb-runtime</artifactId>
      <version>0.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>eclipselink</artifactId>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>javax.persistence</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-instrument-tomcat</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- Database -->
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.10</version>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
      <version>1.5.4</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.3</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-pool</groupId>
          <artifactId>commons-pool</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xerces</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
  <!--  Note that this is behind the spring eclipse server which is running 3.0 -->
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.8.1</version>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <version>2.7.1</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.18</version>
    </dependency>
  </dependencies>
  <scm>
    <connection>scm:svn:http://dsn-chassis.googlecode.com/svn/trunk/chassis-rest</connection>
    <developerConnection>scm:svn:https://dsn-chassis.googlecode.com/svn/trunk/chassis-rest</developerConnection>
    <url>scm:svn:http://dsn-chassis.googlecode.com/svn/trunk/chassis-rest</url>
  </scm>
  <build>
    <defaultGoal>install</defaultGoal>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <inherited>true</inherited>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <!-- webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory -->
          <encoding>UTF-8</encoding>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>jpg,jpeg,gif,png,pdf,xls</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
          <webResources>
            <!-- counter-intuitive ordering - filtered overwrites normal, only 
              normal used in eclipse -->
            <resource>
              <directory>src/main/filtered/</directory>
              <filtering>true</filtering>
            </resource>
            <resource>
              <directory>src/main/webapp/</directory>
              <filtering>false</filtering>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
          <!-- url>http://localhost:8080/manager</url -->
          <path>/${project.artifactId}</path>
          <user>admin</user>
          <password />
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <excludes>
          <!-- 
          Manual invocations rather than tests,
          consider moving to integration test phase later
          Currently we deploy without tests then test as two different jenkins jobs. 
          http://docs.codehaus.org/display/MAVENUSER/Maven+and+Integration+Testing
            <exclude>**/util/AlphabeticallyFirstGetStudyFeed.java</exclude>
           -->
            
          </excludes>
        </configuration>
        <!-- 
        <executions>
           <execution>
            <id>surefire-itest</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
              </includes>
            </configuration>
          </execution>
        </executions>
         -->
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository> 
      <id>cggh</id>
      <name>CGGH Maven Repository</name>
      <url>http://cloud1.cggh.org/maven2/</url>
    </repository>
    <!-- duff
    <repository>
      <id>EclipseLink Repo</id>
      <url>http://www.mirrorservice.org/sites/download.eclipse.org/eclipseMirror/rt/eclipselink/maven.repo/</url>
      use this for javax.persistence 
      <snapshots>
        <enabled>true</enabled> 
      </snapshots> 
    </repository>
    -->
  </repositories>

  <properties>
    <spring.version>3.0.5.RELEASE</spring.version>
    <hibernate.version>3.4.0.GA</hibernate.version>
    <openjpa.version>2.0.1</openjpa.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  <profiles>
  <!-- No profile will give defaults of redeploying locally with username admin and no password -->
    <profile>
      <id>charlie</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>tomcat-maven-plugin</artifactId>
            <version>1.1</version>
            <configuration>
              <url>http://charlie.well.ox.ac.uk:8080/manager</url>
              <username>richardc</username>
              <password>${tomcat.password}</password>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
