<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/oxm http://sites.google.com/site/rmcooksey/spring-oxm-1.5.xsd">

	<!-- This will automatically locate any and all property files you have 
		within your classpath, provided they fall under the META-INF/spring directory. 
		The located property files are parsed and their values can then be used within 
		application context files in the form of ${propertyKey}. -->
	<context:property-placeholder
		location="classpath*:META-INF/spring/*.properties" />

	<context:component-scan base-package="org.cggh.chassis.rest.controller" />
	<context:load-time-weaver/>
	<!-- To enable @RequestMapping process on type level and method level -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<bean id="validatingMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>org.w3._2005.atom.Entry</value>
				<value>org.w3._2005.atom.Feed</value>
			</list>
		</property>
		<property name="schema" value="classpath:atom.xsd"/>
	</bean>
	
	<oxm:jaxb2-marshaller id="marshaller" contextPath="org.w3._2005.atom" />
   
	<bean id="studies" 
	      class="org.springframework.web.servlet.view.xml.MarshallingView">
		<constructor-arg ref="marshaller" />
	</bean>

	<bean id="study" 
	      class="org.springframework.web.servlet.view.xml.MarshallingView">
		<constructor-arg ref="marshaller" />
	</bean>

	<bean id="errorMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>org.cggh.chassis.rest.jaxb.ValidationError</value>
				<value>org.cggh.chassis.rest.jaxb.UnmarshalledObject</value>
			</list>
		</property>
	</bean>

	<bean id="errors" 
	      class="org.springframework.web.servlet.view.xml.MarshallingView">
		<constructor-arg ref="errorMarshaller" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	</bean>

	<!--bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" 		/ -->

	<bean id="studyController" class="org.cggh.chassis.rest.controller.StudyController" />

	<bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer" />
	<!-- Configure the persistance layer -->

    <bean name="options" class="org.cggh.chassis.rest.bean.Options" > 
      <property name="choices">
        <props>
          <prop key="databaseName">${database.name}</prop>
        </props>
      </property>
    </bean>

	<bean name="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName"
			value="org.cggh.chassis.study" />
		
		<property name="persistenceProviderClass" value="org.eclipse.persistence.jpa.PersistenceProvider" />
		<property name="jpaProperties">
			<props>
			<!-- drop-and-create-tables -->
				<prop key="eclipselink.ddl-generation">create-tables</prop>

				<!-- both tries to write to web app install directory-->
                <prop key="eclipselink.ddl-generation.output-mode">database</prop>

    			<prop key="eclipselink.target-database">${database.platform}</prop>
                <prop key="create-ddl-jdbc-file-name">target/createChassisDb.ddl</prop>
                <prop key="drop-ddl-jdbc-file-name">target/dropChassisDb.ddl</prop>
                <prop key="logging.level">ALL</prop>
			</props>
		</property>
		
	</bean>
 
	<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
   		<property name="databasePlatform" value="${database.platform}" />
   		<property name="showSql" value="true" />
	</bean>
<!-- Data source definition -->
<!-- 
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/chassisDb"/>
	 -->	
	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <!-- MySQL
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
         -->
        <property name="testOnBorrow" value="true"/>
    </bean>
	
	<bean name="org.springframework.transaction.PlatformTransactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>
	<!-- bean post-processor for JPA annotations -->
  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
<!-- 
	<tx:annotation-driven
		transaction-manager="org.springframework.transaction.PlatformTransactionManager" />
 -->
</beans>