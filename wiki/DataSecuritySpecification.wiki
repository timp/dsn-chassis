#summary Ensuring data is only accessible to appropriate users.

= Introduction =

As detailed in [http://code.google.com/p/dsn-chassis/issues/detail?id=60 Issue 61] 
the WWARN system must be secured so that only allowed data accesses are possible.

This document describes in natural language the allowed data accesses and 
methods of implementing the required restrictions. 



The access controls are of three types, which can be illustrated as stories: 
 * Role based access to entities: Submitters cannot review submissions
 * Content Type restrictions : Only meta data may be updated, no one may modify an uploaded file
 * Field matching restrictions: Submitters may only alter the studies they have submitted

= Role based access = 

Access control is composed of two elements: authentication and authorisation. 
Authentication determines the identity of the user, authorisation determines what the user may do. 

For safety and ease of comprehension actions must be explicitly allowed, otherwise they are disallowed. 

== User Roles ==

|| *Role* || *Capabilities* || *Description* ||
|| Surfer || None || Anonymous web user ||
|| Submitter || Creation of data, upload of files || Default role for registered users||
|| Anonymizer || Download of files, Upload of transformed files ||A specialist Curator who reduces identifying data||
|| Curator || Download of files, Upload of transformed files  || Allowed to modify all files||
|| Administrator || Deletion of files, data and users || Super user ||

<br />


== Access Operations  ==


The Data Operations we are concerned with are 
<font color="green">Read</font>, <font color="red">Create</font>, <font color="red">Update</font> or <font color="red">Delete</font> on individual, specified, 
entities (collection members). 

In addition a user may <font color="green">List</font> a collection or selection from it. 

|| || Surfer || Submitter || Anonymizer || Curator || Administrator ||
|| Study || <font color="blue">Null</font> || <font color="green">RL</font><font color="red">CU</font> ||<font color="green">RL</font> ||<font color="green">RL</font>|| <font color="green">RL</font><font color="red">UD</font> ||
|| Submission || <font color="blue">Null</font> || <font color="green">RL</font><font color="red">C</font> ||<font color="green">RL</font> ||<font color="green">RL</font>|| <font color="green">RL</font><font color="red">UD</font> ||
|| Review || <font color="blue">Null</font> || <font color="blue">Null</font> ||<font color="green">RL</font><font color="red">C</font> ||<font color="green">RL</font><font color="red">C</font>|| <font color="green">RL</font><font color="red">UD</font> ||
|| Derivation || <font color="blue">Null</font> || <font color="blue">Null</font> ||<font color="green">RL</font><font color="red">C</font> ||<font color="green">RL</font><font color="red">C</font>|| <font color="green">RL</font><font color="red">UD</font> ||
|| Media || <font color="blue">Null</font> || <font color="green">RL</font><font color="red">C</font> ||<font color="green">RL</font><font color="red">C</font> ||<font color="green">RL</font><font color="red">C</font>|| <font color="green">RL</font><font color="red">UD</font> ||
|| Resource || <font color="blue">Null</font> || <font color="green">RL</font><font color="red">C</font> ||<font color="green">RL</font><font color="red">C</font> ||<font color="green">RL</font><font color="red">C</font>|| <font color="green">RL</font><font color="red">UD</font> ||


<br />
= Content Type Restrictions =

We need to ensure that uploaded files cannot be modified. 
Derivations take as input an uploaded file and output a new uploaded file. 
If a single file is uploaded twice it will still be known as two separate files within Chassis.

The underlying data store (eXist) distinguishes between files which it is concerned with by the file's type: it is only interested in files with a content type of <tt>application/atom+xml</tt> (see [http://exist.sourceforge.net/atompub.html 2 ])

The content type of an Atom PUT request can be determined either from the request content-type property or as a hack by matching the url pattern. 

We only allow PUT requests with Content-Type equal to <tt>application/atom+xml</tt>.



= Field Matching Restrictions  = 

The only field level restriction that we currently require is the ability to ensure that the the current authenticated user is a member of the author list for the entity. 




= Access Rules = 

We can cast the rules into a rule format which defines the data access operations we allow. We do not need to consider what we disallow, as *everything that is not permitted is forbidden*. 
These rules take the form of a triple of Role, Access Operation and collection.
Note that the query and retrieve operations are filtered by whether the entry author list contains the user's id. 

 * allow ( submitter, retrieve member, studies )
 * allow ( submitter, query members, studies )
 * allow ( submitter, create member, studies )
 * allow ( submitter, update member, studies )

 * allow ( anonymizer, retrieve member, studies )
 * allow ( anonymizer, query members, studies )

 * allow ( curator, retrieve member, studies )
 * allow ( curator, query members, studies )

 * allow ( administrator, retrieve member, studies )
 * allow ( administrator, query members, studies )
 * allow ( administrator, create member, studies )
 * allow ( administrator, delete member, studies )



 * allow ( submitter, retrieve member, submission )
 * allow ( submitter, query members, submission )
 * allow ( submitter, create member, submission )
 * allow ( submitter, update member, submission )

 * allow ( anonymizer, retrieve member, submission )
 * allow ( anonymizer, query members, submission )

 * allow ( curator, retrieve member, submission )
 * allow ( curator, query members, submission )

 * allow ( administrator, retrieve member, submission )
 * allow ( administrator, query members, submission )
 * allow ( administrator, create member, submission )
 * allow ( administrator, delete member, submission )




 * allow ( anonymizer, retrieve member, review )
 * allow ( anonymizer, query members, review )
 * allow ( anonymizer, create members, review )

 * allow ( curator, retrieve member, review )
 * allow ( curator, query members, review )
 * allow ( curator, create members, review )

 * allow ( administrator, retrieve member, review )
 * allow ( administrator, query members, review )
 * allow ( administrator, create member, review )
 * allow ( administrator, delete member, review )




 * allow ( anonymizer, retrieve member, derivation )
 * allow ( anonymizer, query members, derivation )
 * allow ( anonymizer, create members, derivation )

 * allow ( curator, retrieve member, derivation )
 * allow ( curator, query members, derivation )
 * allow ( curator, create members, derivation )

 * allow ( administrator, retrieve member, derivation )
 * allow ( administrator, query members, derivation )
 * allow ( administrator, create member, derivation )
 * allow ( administrator, delete member, derivation )



 * allow ( submitter, retrieve member, Media )
 * allow ( submitter, query members, Media )
 * allow ( submitter, create member, Media )

 * allow ( anonymizer, retrieve member, Media )
 * allow ( anonymizer, query members, Media )

 * allow ( curator, retrieve member, Media )
 * allow ( curator, query members, Media )

 * allow ( administrator, retrieve member, Media )
 * allow ( administrator, query members, Media )
 * allow ( administrator, create member, Media )
 * allow ( administrator, delete member, Media )



 * allow ( submitter, retrieve member, Resource )
 * allow ( submitter, query members, Resource )
 * allow ( submitter, create member, Resource )

 * allow ( anonymizer, retrieve member, Resource )
 * allow ( anonymizer, query members, Resource )

 * allow ( curator, retrieve member, Resource )
 * allow ( curator, query members, Resource )

 * allow ( administrator, retrieve member, Resource )
 * allow ( administrator, query members, Resource )
 * allow ( administrator, create member, Resource )
 * allow ( administrator, delete member, Resource )




==References ==
 # [http://stackoverflow.com/questions/1322135/spring-security-authorization-without-authentication Spring authorization without authentication]
 # [http://exist.sourceforge.net/atompub.html Exist: Atom Protocol Support]



= Appendix = 
== Chassis Atom Entries = =

All Chassis Atom Entries have the following fields: 
Id, Title, Summary, Author list, Date published, Date last updated. 

|| *Name* || *Additional Fields* || *Links*||
|| Study || Module || Edit || 
|| Submission  || <font color="blue">None</font> || Study, Media+ ||
|| Review || Type, Outcome || Media+ (in)||
|| Derivation || <font color="blue">None</font> ||  Media+ (in), Media+ (out)||
|| Media  || <font color="blue">None</font> || Edit, Content.src ||

<br />


= Chassis Collection Query Filters =

All of the above Entries are aggregated into Collections (Atom Feeds). 
The raw collections can only be accessed by *Administrators*.

All other access to the collections is through queries which 
are filtered by the current user and her roles.

<br />