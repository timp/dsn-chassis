#summary How to run with a local copy of CAS



= Details =


  * Checkout wwarn-cas
  * Create the database using the script in resources/min-db.sql
  * Follow the instructions for configuring tomcat datasources
  * Configure Apache

== Apache Configuration ==

1. Set up apache2 to reverse proxy cas through SSL:

a2ensite default-ssl
a2enmod ssl

2. Modify the default-ssl file and add the the following lines to the end of the file, inside the VirtualHost section:

        ProxyRequests Off
        <Proxy *>
                Order deny,allow
                Allow from all
        </Proxy>
 
        ProxyPass /sso http://localhost:8080/sso
        ProxyPassReverse /sso http://localhost:8080/sso
        ProxyPass /repository http://localhost:8080/repository
        ProxyPassReverse /repository http://localhost:8080/repository

3. Import the self-signed ssl certificate into the cacerts file for the jvm on the local machine. This will tell java that the local machine is a valid ssl cert issuing authority as far a java is concerned. The ubuntu package for apache2 generates the self-signed certificate when you install it. We can find the one that is being used by apache by looking in the /etc/apache2/sites-enabled/default-ssl configuration file:

        SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem
        SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

Note that we need to set up the host for proper usage of SSL. We need to include the IP address in /etc/hosts like so:

127.0.0.1 localhost
10.204.241.226 cloud1.cggh.org cloud1 # real IP
174.129.200.39 cloud1.cggh.org cloud1 # elastic IP

add the correct host name to the /etc/hostname file:

cloud1


Restart the machine to make sure these changes are applied.

4. Add a NameVirtualHost and change the VirtualHost record to reflect the physical IP of the machine in /etc/apache2/sites-enabled/default-ssl:

#<VirtualHost _default_:443>
NameVirtualHost 10.204.241.226:443
<VirtualHost 10.204.241.226:443>

5. Replace the self-signed SSL certificate to reflect the hostname changes:

make-ssl-cert generate-default-snakeoil --force-overwrite

6. Import this into the java cacerts file.

cd /etc/ssl/certs/java
cp cacerts cacerts.orig
/usr/lib/jvm/java-6-sun-1.6.0.24/bin/keytool -import -file /etc/ssl/certs/ssl-cert-snakeoil.pem -keystore ./cacerts


Enter keystore password:  changeit
Owner: CN=cloud1.cggh.org
Issuer: CN=cloud1.cggh.org
Serial number: f01c6ab885f5c5f5
Valid from: Wed May 18 13:24:53 UTC 2011 until: Sat May 15 13:24:53 UTC 2021
Certificate fingerprints:
	 MD5:  3F:F4:21:86:3E:4B:37:6D:68:18:C2:16:91:EE:C4:58
	 SHA1: 86:36:80:18:CA:F7:9D:6B:21:08:AF:E4:58:F4:B0:63:C5:DF:BA:D4
	 Signature algorithm name: SHA1withRSA
	 Version: 1
Trust this certificate? [no]:  yes
Certificate was added to keystore

7. Restart apache2 and tomcat:

/etc/init.d/apache2 restart
/etc/init.d/tomcat restart