#summary why use the Atom Publishing Protocol?

The [http://www.atomenabled.org/developers/protocol/atom-protocol-spec.php Atom Publishing Protocol (APP or AtomPub)], coupled with the [http://www.atomenabled.org/developers/syndication/atom-format-spec.php Atom Syndication Format], provide a relatively simple, standard, XML-based protocol for managing files, data and metadata via the Web. Its main use is as a replacement and expansion of RSS 2.0, the syndication format primarily used for blog feeds. However, !AtomPub is extensible and has been adapted to a wide range of uses. For example, all of the [http://code.google.com/apis/gdata/ Google Data APIs] are based on !AtomPub.

Because !AtomPub is based on REST-style HTTP interactions with relatively simple XML messages, it can provide platform-independent interfaces to a service or set of services. It can be used by a wide range of clients, including rich-client (e.g., GWT) applications. Because the XML messaging format has a number of extension points, the messaging protocol is very flexible, and can take arbitrarily structured data, allowing extensive customisation of services for different data sharing networks without needing any change to the server-side code. There are also a number of open-source implementations of the protocol, such as [http://exist.sourceforge.net/ eXist] or [http://abdera.apache.org/ Apache Abdera], which might be deployed with little or no customisation/configuration to provide the necessary functionality, saving development effort.

Many of the [ArchitectureOverview core services] required within an infrastructure to support a data sharing network can be characterised as services that provide persistence (create, retrieve, update, delete) of some form of media content, structured data or metadata, and hence could be realised with an interface based on !AtomPub, with perhaps some simple extensions. Therefore, it seemed worthwhile to explore how !AtomPub might be used as an interface to some of those services.

For an example of an API based on !AtomPub, see [StudyMetadataServiceAPIs]. 